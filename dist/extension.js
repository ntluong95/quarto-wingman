(()=>{"use strict";var e={346:e=>{e.exports=require("positron")},398:e=>{e.exports=require("vscode")},455:function(e,t,n){var o,r=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,r)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=o(e),i=0;i<n.length;i++)"default"!==n[i]&&r(t,e,n[i]);return l(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.registerCellOptionHoverProvider=function(e){e.subscriptions.push(a.languages.registerHoverProvider(["python","r"],{provideHover(e,t){const n=e.lineAt(t.line).text;if(!/^#\s?\|/.test(n.trimStart()))return;const o=e.getWordRangeAtPosition(t,/[a-zA-Z0-9_-]+/);if(!o)return;const r=e.getText(o);for(const e in s){const t=s[e];if(Object.prototype.hasOwnProperty.call(t,r)){const n=new a.MarkdownString;return n.appendMarkdown(`### ${e}\n\n`),n.appendMarkdown(t[r].join("\n")),n.isTrusted=!0,new a.Hover(n)}}}}))};const a=i(n(398)),s={Attributes:{label:["`label` — Unique label for code cell. Used when other code needs to refer to the cell (e.g. for cross references `fig-samples` or `tbl-summary`)."],classes:["`classes` — Classes to apply to cell container."],tags:["`tags` — Array of tags for notebook cell."],id:["`id` — Notebook cell identifier. If no `id` is present, `label` will be used instead. See [Jupyter proposal](https://jupyter.org/enhancement-proposals/62-cell-id/cell-id.html)"]},"Code Output":{eval:["`eval` — Evaluate code cells (if `false` just echos the code into output).","","- `true` (default): evaluate code cell","- `false`: don’t evaluate code cell","- `[...]:` Selectively include/exclude lines (knitr only)"],echo:["`echo` — Include cell source code in rendered output.","","- `true` (default): include source code","- `false`: do not include code (e.g. in beamer, revealjs, pptx)","- `fenced`: also include code block delimiter","- `[...]:` Selectively show lines (knitr only)"],"code-fold":["`code-fold` — Collapse code into an HTML `<details>` tag.","","- `true`: collapse code","- `false` (default): do not collapse","- `show`: initially expanded"],"code-summary":["`code-summary` — Summary text shown on collapsed code blocks."],"code-overflow":["`code-overflow` — Choose overflow strategy (e.g. `scroll`, `wrap`)."],"code-line-numbers":["`code-line-numbers` — Include line numbers or specify highlight animation.","","Examples:","- `true`, `false`","- `3,4,5`","- `1-3,5`","- `|5|5-10,12`"],"lst-label":["`lst-label` — Label for code listing (used for cross references)."],"lst-cap":["`lst-cap` — Caption for code listing."]},"Cell Output":{output:["`output` — Include code execution results in output.","","- `true`: include results","- `false`: hide results","- `asis`: treat as raw markdown"],warning:["`warning` — Include warnings in rendered output."],error:["`error` — Include errors in output, execution continues."],include:["`include` — Master switch to exclude all code/results from output."],panel:["`panel` — Panel type: `tabset`, `input`, `sidebar`, `fill`, `center`."],"output-location":["`output-location` — Where to place output relative to code.","","- `default`","- `fragment`","- `slide`","- `column`, `column-fragment` (revealjs only)"]},Figures:{"fig-cap":["`fig-cap` — Caption for figure."],"fig-subcap":["`fig-subcap` — Subcaptions for figures."],"fig-link":["`fig-link` — Hyperlink target for the figure."],"fig-align":["`fig-align` — left, right, center, default."],"fig-alt":["`fig-alt` — Alternative text for images."],"fig-env":["`fig-env` — LaTeX environment for figures."],"fig-pos":["`fig-pos` — LaTeX figure position (e.g. `H`, or false for none)."],"fig-scap":["`fig-scap` — Short caption (used in PDF lists)."]},Tables:{"tbl-cap":["`tbl-cap` — Table caption."],"tbl-subcap":["`tbl-subcap` — Table subcaptions."],"tbl-colwidths":["`tbl-colwidths` — Explicit column widths for wide tables.","","- `auto`, `true`, `false`","- `[40, 30, 30]`: percentage widths"],"html-table-processing":["`html-table-processing` — If `none`, don’t touch raw HTML tables."]},"Panel Layout":{layout:["`layout` — 2D array of widths to layout blocks side-by-side or stacked."],"layout-ncol":["`layout-ncol` — Number of layout columns."],"layout-nrow":["`layout-nrow` — Number of layout rows."],"layout-align":["`layout-align` — Horizontal alignment of layout (left, center, right)."],"layout-valign":["`layout-valign` — Vertical alignment of layout (top, center, bottom)."]},"Page Columns":{column:["`column` — Output column for page layout."],"fig-column":["`fig-column` — Column for figure."],"tbl-column":["`tbl-column` — Column for table."],"cap-location":["`cap-location` — Caption position (top, bottom, margin)."],"fig-cap-location":["`fig-cap-location` — Caption for figure."],"tbl-cap-location":["`tbl-cap-location` — Caption for table."]}}},963:function(e,t,n){var o,r=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,r)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=o(e),i=0;i<n.length;i++)"default"!==n[i]&&r(t,e,n[i]);return l(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.registerInlineRepl=function(e){function t(e,t){const{lineCount:n}=e,o=e.lineAt(t).text.trimEnd(),r=u.exec(o);if(!r)return[t+1,null];const l=t,i=r[1]||"",s=[];for(;t<n;t++){const n=e.lineAt(t).text.trimEnd(),o=u.exec(n);if(!n.startsWith(i)||null===o)break;s.push(o[2])}const c=t;for(;t<n;t++){const n=e.lineAt(t).text.trimEnd();if(n===i.trim()){t++;break}if(u.test(n)||!n.startsWith(i))break}return[t,{headerRange:new a.Range(e.lineAt(l).range.start,e.lineAt(c-1).range.end),outputRange:new a.Range(e.lineAt(c).range.start,c===t?e.lineAt(c).range.start:e.lineAt(t-1).range.end),commands:s,prefix:i}]}e.subscriptions.push(a.commands.registerTextEditorCommand("inline-repl.run",((e,n,o)=>{(async function(e,n,o){if(!o)return;const{headerLineNum:r,isRunning:l}=o;if(l.flag)return;l.flag=!0;const i=function(e){const t=e.languageId;return"python"===t?"python":"r"===t?"r":null}(e.document);if(!i)return;const[,a]=t(e.document,r);if(!a)return;const{outputRange:u,commands:c,prefix:f}=a,d=c.join("\n");try{const t=function(e,t,n){let o=e.split(/\r?\n/);""===o[0]&&o.shift(),""===o[o.length-1]&&o.pop();const r=n||"# ",l=o.map((e=>r+(""===e?"<BLANKLINE>":e))),i=t.isEmpty?"\n":"";return l.map((e=>e+"\n")).join("")+r.trim()+i}((await s.runtime.executeCode(i,d,!1,void 0,s.RuntimeCodeExecutionMode.Interactive)).output,u,f);await e.edit((e=>e.replace(u,t)))}catch(e){console.error("REPL execution failed:",e)}finally{l.flag=!1}})(e,0,o).catch((e=>console.error(`Inline REPL error: ${e}`)))}))),e.subscriptions.push(a.languages.registerCodeLensProvider([{language:"python",scheme:"file"},{language:"r",scheme:"file"}],{provideCodeLenses(e){const n=[],o=e.lineCount;for(let r=0;r<o;){const[o,l]=t(e,r);if(r=o,l){const e={title:"▶ Run Inline Code",command:"inline-repl.run",arguments:[{headerLineNum:l.headerRange.start.line,isRunning:{flag:!1}}]};n.push(new a.CodeLens(l.headerRange,e))}}return n}}))};const a=i(n(398)),s=i(n(346)),u=/^(\s*#>?\s+)?>>>(.*)$/}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var l=t[o]={exports:{}};return e[o].call(l.exports,l,l.exports,n),l.exports}var o={};(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0}),e.activate=function(e){console.log("Positron Inline REPL activated!"),(0,r.registerCellOptionHoverProvider)(e),(0,t.registerInlineRepl)(e)},e.deactivate=function(){};const t=n(963),r=n(455)})(),module.exports=o})();